/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.2 glasses.gltf
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { useFrame } from '@react-three/fiber';

export function Model({...props}) {
  const { nodes, materials } = useGLTF('./glasses.gltf')

  const myMesh = React.useRef();

  useFrame(({ clock }) => {
    const a = Math.sin(clock.getElapsedTime() / 2);
    // @ts-ignore
    myMesh.current.rotation.y = a;
    // @ts-ignore
    myMesh.current.rotation.x = a;
  });

  return (
    // @ts-ignore
    <group {...props} dispose={null} ref={myMesh}>
      {/* @ts-ignore */}
      <mesh geometry={nodes.Frame.geometry} material={materials['Gloss Black']}>
      {/* @ts-ignore */}
        <mesh geometry={nodes.Hinge_1_Left.geometry} material={materials['Gloss Black']} position={[0.07, 0, -0.02]} />
      {/* @ts-ignore */}
        <mesh geometry={nodes.Hinge_1_Right.geometry} material={materials['Gloss Black']} position={[-0.07, 0, -0.02]} />
      {/* @ts-ignore */}
        <mesh geometry={nodes.Temple_L.geometry} material={materials['Gloss Black']} position={[0.07, 0, -0.02]}>
      {/* @ts-ignore */}
          <mesh geometry={nodes.Hinge_2_Left.geometry} material={materials['Gloss Black']} />
      {/* @ts-ignore */}
          <mesh geometry={nodes.Screw_Left.geometry} material={materials.Metal} />
        </mesh>
        {/* @ts-ignore */}
        <mesh geometry={nodes.Temple_R.geometry} material={materials['Gloss Black']} position={[-0.07, 0, -0.02]}>
        {/* @ts-ignore */}
          <mesh geometry={nodes.Hinge_2_Right.geometry} material={materials['Gloss Black']} />
        {/* @ts-ignore */}
          <mesh geometry={nodes.Screw_Right.geometry} material={materials.Metal} />
        </mesh>
      </mesh>
    </group>
  )
}

useGLTF.preload('./glasses.gltf')
